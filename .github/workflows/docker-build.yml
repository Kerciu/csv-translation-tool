name: Docker Container Build CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: translator
      MONGO_URL: "mongodb://root:example@localhost:27017/translator?authSource=admin"
      REDIS_URL: "redis://redis:6379/1"
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      PYTHONPATH: "${{ github.workspace }}/server"
      RUSTFLAGS: "-A warnings"
    steps:
    - uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat > .env << EOF
        MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
        MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
        MONGO_INITDB_DATABASE=translator
        MONGO_URL=mongodb://${{ secrets.MONGO_INITDB_ROOT_USERNAME }}:${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}@db:27017/translator?authSource=admin
        REDIS_URL=redis://redis:6379/1
        ALLOWED_HOSTS=localhost,127.0.0.1
        DEBUG=True
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        NEXT_OUTPUT=production
        EOF

    - name: Build the Docker image
      run: docker compose build --no-cache

    - name: Run the Docker containers
      run: docker compose up -d

    - name: Wait for containers to initialize
      run: sleep 10

    - name: Check client service is running
      run: |
        if [ $(docker compose ps -q client | wc -l) -eq 0 ]; then
          echo "Client service is not running"
          docker compose logs translator-client
          exit 1
        fi

    - name: Check server service is running
      run: |
        if [ $(docker compose ps -q server | wc -l) -eq 0 ]; then
        echo "Server service is not running"
          docker compose logs translator-server
          exit 1
        fi

    - name: Check database service is running
      run: |
        if [ $(docker compose ps -q db | wc -l) -eq 0 ]; then
          echo "Database service is not running"
          docker compose logs translator-db
          exit 1
        fi

    - name: Check redis service is running
      run: |
        if [ $(docker compose ps -q redis | wc -l) -eq 0 ]; then
          echo "Redis service is not running"
          docker compose logs translator-redis
          exit 1
        fi

    - name: Clean up Docker containers
      run: docker compose down
