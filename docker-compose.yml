services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NEXT_OUTPUT=${NEXT_OUTPUT}
    ports:
      - "3000:3000"
    container_name: translator-client
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: translator-server
    depends_on:
      - db
      - redis
      - model
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - MONGO_URL=${MONGO_URI}
      - REDIS_URL=${REDIS_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/authentication/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mongo:6.0
    container_name: translator-db
    command: ["mongod", "--bind_ip_all", "--auth", "--quiet", "--logpath", "/dev/stdout", "--logappend"]
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    healthcheck:
      test: ["CMD", "mongosh", "--username", "root", "--password", "example", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  model:
    build:
      context: ./model
      dockerfile: Dockerfile
    image: translator-model:latest
    container_name: translator-model
    volumes:
      - model-cache:/root/.cache/huggingface
    environment:
      - HF_HOME=/root/.cache/huggingface

  redis:
    image: redis:alpine
    container_name: translator-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  model-cache: